q()
source('~/.active-rstudio-document')
a <- makeCacheMatrix(rbind(c(1,-1/4), c(-1/4,1)))
a$getMatrixInverse()
source('~/coursera_data_science/cachematrix.R')
a <- makeCacheMatrix(rbind(c(1,-1/4), c(-1/4,1)))
a$getMatrixInverse()
source('~/.active-rstudio-document')
source('~/coursera_data_science/cachematrix.R')
cacheSolve(a)
cacheSolve(a)
a$setMatrix(rbind(c(1,-1/5), c(-1/5,1)))
source('~/coursera_data_science/cachematrix.R')
a <- makeCacheMatrix(rbind(c(1,-1/4), c(-1/4,1)))
a
a$getInverseMatrix()
ca
cacheSolve(a)
cacheSolve(a)
a$setInverseMatrix(rbind(c(1,-1/5), c(-1/5,1)))
a$getMatrixInverse()
a$getMatrixInverse()
a$getInverseMatrix()
a$setInverseMatrix(rbind(c(1,-1/5), c(-1/5,1)))
a$getInverseMatrix()
cacheSolve(a)
source('~/coursera_data_science/cachematrix.R')
a <- makeCacheMatrix(rbind(c(1,-1/4), c(-1/4,1)))
a$getInverseMatrix()
cacheSolve(a)
cacheSolve(a)
a$setInverseMatrix(rbind(c(1,-1/5), c(-1/5,1)))
a$getInverseMatrix()
source('~/coursera_data_science/cachematrix.R')
a$setInverseMatrix(rbind(c(1,-1/5), c(-1/5,1)))
a$getInverseMatrix()
source('~/coursera_data_science/cachematrix.R')
source('~/coursera_data_science/cachematrix.R')
a <- makeCacheMatrix(rbind(c(1,-1/4), c(-1/4,1)))
a$getInverseMatrix()
cacheSolve(a)
cacheSolve(a)
rm(list=ls())
source('~/coursera_data_science/cachematrix.R')
a <- makeCacheMatrix(rbind(c(1,-1/4), c(-1/4,1)))
a$getInverseMatrix()
cacheSolve(a)
cacheSolve(a)
source('~/coursera_data_science/cachematrix.R')
a <- makeCacheMatrix(rbind(c(1,-1/4), c(-1/4,1)))
a$getInverseMatrix()
cacheSolve(a)
cacheSolve(a)
source('~/coursera_data_science/cachematrix.R')
source('~/coursera_data_science/cachematrix.R')
source('~/coursera_data_science/cachematrix.R')
a <- makeCacheMatrix(rbind(c(1,-1/4), c(-1/4,1)))
a$getInverseMatrix()
cacheSolve(a)
source('~/coursera_data_science/cachematrix.R')
a <- makeCacheMatrix(rbind(c(1,-1/4), c(-1/4,1)))
a$getInverseMatrix()
cacheSolve(a)
source('~/coursera_data_science/cachematrix.R')
a <- makeCacheMatrix(rbind(c(1,-1/4), c(-1/4,1)))
a$getInverseMatrix()
cacheSolve(a)
cacheSolve(a)
source('~/coursera_data_science/cachematrix.R')
a <- makeCacheMatrix(rbind(c(1,-1/4), c(-1/4,1)))
a$getInverseMatrix()
cacheSolve(a)
cacheSolve(a)
a$setInverseMatrix(rbind(c(1,-1/5), c(-1/5,1)))
a$getInverseMatrix()
source('~/coursera_data_science/cachematrix.R')
a$setInverseMatrix(rbind(c(1,-1/5), c(-1/5,1)))
a$getInverseMatrix()
cacheSolve(a)
a$set(rbind(c(1,-1/5), c(-1/5,1)))
a$get()
a$getInverseMatrix()
cacheSolve(a)
a$getInverseMatrix()
cacheSolve(a)
source('~/coursera_data_science/cachematrix.R')
5/3
3/5
debug(ls())
debug(ls)
debug(ls())
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
?sapply
help('c')
help(':')
sapply(1:10, function(x) {x} )
sapply(1:10, function(x) {x^2} )
sapply(1:10, function(x) {sqr(x)} )
sapply(1:10, function(x) {sqrt(x)} )
?even
?%
?mod
apropos('modulus')
apropose('modulus')
apropose('modulus')
mod
%
1%2
mod(2)
10 %% 2
10 %% 3
sapply(1:10, function(x) {
if(x %% 2) {
x^2
}
x
} )
sapply(1:10, function(x) {
if(x %% 2) {
x^2
}
x
} )
x^2
sapply(1:10, function(x) {
if(x %% 2) {
x^2
}
x
} )
} )
sapply(1:10, function(x) {
if(x %% 2) {
x^2
}
x
} )
sapply(1:10, function(x) {
s
sapply(1:10, function(x) {
if(x %% 2) {
x <- x^2
}
x
} )
q
sapply(1:10, function(x) {
if(x %% 2) {
x <- x^2
}
x
} )
if(x %% 2 == 0) {
sapply(1:10, function(x) {
if(x %% 2 == 0) {
x <- x^2
}
x
} )
sapply(1:10, function(x) {
if(x %% 2 == 0) {
x <- x^2
}
} )
x <- sapply(1:10, function(x) {
if(x %% 2 == 0) {
x <- x^2
}
} )
str(x)
x <- sapply(1:10, function(x) {
if(x %% 2 == 0) {
x <- x^2
}
else {
x <- x
}
} )
x <- sapply(1:10, function(x) {
if(x %% 2 == 0) {
x <- x^2
}
else {
x <- x
}
} )
str(x)
x
}
} )
x <- sapply(1:10, function(x) {
}
q
x <- sapply(1:10, function(x) {
if(x %% 2 == 0) {
x^2
}
else {
x
}
} )
x
sapply(1:10, function(x) {
if(x %% 2 == 0) {
x^2
}
else {
x
}
} )
?mtcars
data.list("mtcars")
?load
?data
data('mtcars')
data(mtcars)
str(mtars)
str(mtcars)
mtcars$cyl
?mtcars
require(graphics)
pairs(mtcars, main = "mtcars data")
coplot(mpg ~ disp | as.factor(cyl), data = mtcars,
panel = panel.smooth, rows = 1)
?tapply
tapply(mtcars, cyl, function(happy) {
})
tapply(mtcars, mtcars$cyl, function(happy) {
})
tapply(mtcars, mtcars$cyl, function(happy) {
class(happy)
})
tapply(mtcars, mtcars$cyl, function(happy) {
class(happy)
})
source('~/.active-rstudio-document')
tapply(mtcars, mtcars$cyl, function(happy) {
class(happy)
})
by(mtcars, mtcars$cyl, function(happy) {
a
a
a
a
a
a
a
0
9)
class(happy)
print class(happy)
print (class(happy)  )
?by
by(mtcars, cyl, function(happy) {
)
subset (happy, 1)
?subset
happy
x
by(mtcars, cyl, function(x) {
by(mtcars, cyl, function(x) {
x
})
)
by(mtcars, cyl, function(x) {
O)))
final <- do.call(rbind, by(mtcars, mtcars$cyl, function(x) {
)
final <- do.call(rbind, by(mtcars, mtcars$cyl, function(x) {
x
}))
final <- do.call(rbind, by(mtcars, mtcars$cyl, function(x) {
x
}))
final
View(final)
final
View(final)
final <- do.call(rbind, by(mtcars, mtcars$cyl, function(x) {
class(x)
}))
final
avg(x$cyl)
?avg
?average
mean(x$cyl)
mean(x[,cyl])
mean(x[,"cyl"])
mean(x[,c("cyl")])
mean(x[, cyl] )
mean(x[, mtcars$cyl] )
mean(x[, 2] )
do.call(rbind, by(mtcars, mtcars$cyl, function(x) {
)
x
rm(list=ls())
data(mtcars)
}))
}))
x
y
mean(x)
?by
x
))
subset(mtcars,  cyl == 4)
subset(mtcars,  'cyl' == 4)
subset(mtcars,  cyl == 4)
class(subset(mtcars,  cyl == 4))
final <- do.call(rbind, by(mtcars, cyl, function(x) {x}))
final <- do.call(rbind, by(mtcars, mtcars[, "cyl"], function(x) {x}))
View(final)
View(final)
View(mtcars)
}))
final <- do.call(rbind, by(mtcars, mtcars[, "cyl"], function(x) {
)
final <- do.call(rbind, by(mtcars, mtcars[, "cyl"], function(x) {
)
final <- do.call(rbind, by(mtcars, mtcars[, "cyl"], function(x) { x  }))
View(final)
View(mtcars)
final <- do.call(rbind, by(mtcars, mtcars[, "cyl"], function(x) { x[1,] }))
View(final)
View(final)
?mtcars
require(graphics)
pairs(mtcars, main = "mtcars data")
coplot(mpg ~ disp | as.factor(cyl), data = mtcars,
panel = panel.smooth, rows = 1)
do.call(rbind, by(mtcars, mtcars[, "cyl"], function(x) { mean(x$mpg) }))
do.call(rbind, by(mtcars, mtcars[, "cyl"], function(x) { colmean(x) }))
do.call(rbind, by(mtcars, mtcars[, "cyl"], function(x) { colmeans(x) }))
?colmean
?colmean
?colsmean
?colmean
mean
do.call(rbind, by(mtcars, mtcars[, "cyl"], function(x) { colMeans(x) }))
do.call(rbind, by(mtcars, mtcars[, "cyl"], function(x) { colMeans(x[, mpg]) }))
do.call(rbind, by(mtcars, mtcars[, "cyl"], function(x) { colMeans(x[, "mpg"]) }))
do.call(rbind, by(mtcars, mtcars[, "cyl"], function(x) { colMeans(x) }))
colMeans(subset(mtcars, cyl == 4)
)
colMeans(subset(mtcars, cyl == 4))
colMeans(subset(mtcars, cyl == 6))
?mtcars
data(mtcars)
mtcars
head(mtcars)
fffffffffffffffffffffff
data(mtcars)
data(mtcars)
head(mtcars)
mtcars[order(mpg),]
mtcars[order("mpg"),]
attach(mtcars)
mtcars[order(mpg),]
mtcars[mpg,]
mtcars$mpg
mean(mtcars$mpg)
class(mtcars$mpg)
nrow(mtcars$mpg)
nrow(mtcars)
count(mtcars$mpg)
length(mtcars$mpg)
length(mtcars)
names(mtcars)
head(mtcars)
class(order(mtcars$mpg))
order(mtcars$mpg)
mtcar$mpg
mtcars$mpg
View(mtcars)
length(mtcars)
mtcars
mtcars[c(1,3,5),]
mtcars[c(1,3,5),c(1)]
mtcars[order(mtcars$mpg),]
mtcars[c(1,2),]
mtcars[-c(1,2),]
mtcars[c(1,2),]
mtcars[c(2,1),]
mtcars[c(1),]
mtcars[c(1),][c(1)]
rbind(mtcars[c(1),], mtcars[c(1,)]
rbind(mtcars[c(1),], mtcars[c(1,)])
rbind(mtcars[c(1),], mtcars[c(1),])
class(rbind(mtcars[c(1),], mtcars[c(1),]))
mtcars[c(1, 1),]
mtcars[c(1, 1, 1),]
order(mtcars$mpg)
mtcars[c(15, 16, 24),]
head (mtcars)
mtcars[order(mtcars$mpg), cyl > 4]
mtcars[order(mtcars$mpg), mtcars$cyl > 4]
mtcars$cyl > 4
mtcars[mtcars$cyl > 4, ]
mtcars[mtcars$cyl > 6, ]
mtcars[order(mtcars$mpg, cyl > 6), ]
mtcars[mtcars$cyl > 4 & mtcars$gear > 4, ]
mtcars[order(mtcars[mtcars$cyl > 4 & mtcars$gear > 4, ], cyl, ]
mtcars[order(mtcars[mtcars$cyl > 4 & mtcars$gear > 4, ], cyl, ])
mtcars[order(mtcars[mtcars$cyl > 4 & mtcars$gear > 4, ], cyl)
)
setwd("~/coursera_data_science/ExData_Plotting1")
source('~/coursera_data_science/ExData_Plotting1/plot1.R')
plot1()
source('~/coursera_data_science/ExData_Plotting1/plot1.R')
plot1()
source('~/coursera_data_science/ExData_Plotting1/plot1.R')
plot1()
if(! require("data.table")) {
install.packages("data.table")
}
source('~/coursera_data_science/ExData_Plotting1/plot2.R')
plot2()
source('~/coursera_data_science/ExData_Plotting1/plot3.R')
plot3()
source('~/coursera_data_science/ExData_Plotting1/plot4.R')
plot4()
plot1()
plot1()
setwd("~/coursera_data_science/ExData_Plotting1")
source('~/coursera_data_science/ExData_Plotting1/plot1.R')
plot1()
source('~/coursera_data_science/ExData_Plotting1/plot2.R')
source('~/coursera_data_science/ExData_Plotting1/plot3.R')
source('~/coursera_data_science/ExData_Plotting1/plot4.R')
plot2()
plot3()
source('~/coursera_data_science/ExData_Plotting1/plot4.R')
plot4()
